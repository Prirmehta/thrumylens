{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshmehta/Desktop/react_webtech/app/project1/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const login = async (email, password) => {\n    // Here you would typically make an API call to your backend\n    // For demo purposes, we'll use mock data\n    if (email === \"demo@example.com\" && password === \"password\") {\n      const userData = {\n        id: \"1\",\n        email: email,\n        name: \"Demo Client\",\n        albums: [{\n          id: \"1\",\n          title: \"Wedding Day\",\n          date: \"2023-10-15\",\n          photos: [{\n            id: \"1\",\n            url: \"https://images.unsplash.com/photo-1583939003579-730e3918a45a\"\n          }, {\n            id: \"2\",\n            url: \"https://images.unsplash.com/photo-1583939003579-730e3918a45b\"\n          }]\n        }]\n      };\n      setCurrentUser(userData);\n      return true;\n    }\n    throw new Error(\"Invalid credentials\");\n  };\n  const logout = () => {\n    setCurrentUser(null);\n  };\n  const value = {\n    currentUser,\n    login,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"ta0ozVSi/laveBdN8v1z4lKHbzA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","login","email","password","userData","id","name","albums","title","date","photos","url","Error","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rajeshmehta/Desktop/react_webtech/app/project1/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const login = async (email, password) => {\n    // Here you would typically make an API call to your backend\n    // For demo purposes, we'll use mock data\n    if (email === \"demo@example.com\" && password === \"password\") {\n      const userData = {\n        id: \"1\",\n        email: email,\n        name: \"Demo Client\",\n        albums: [\n          {\n            id: \"1\",\n            title: \"Wedding Day\",\n            date: \"2023-10-15\",\n            photos: [\n              { id: \"1\", url: \"https://images.unsplash.com/photo-1583939003579-730e3918a45a\" },\n              { id: \"2\", url: \"https://images.unsplash.com/photo-1583939003579-730e3918a45b\" }\n            ]\n          }\n        ]\n      };\n      setCurrentUser(userData);\n      return true;\n    }\n    throw new Error(\"Invalid credentials\");\n  };\n\n  const logout = () => {\n    setCurrentUser(null);\n  };\n\n  const value = {\n    currentUser,\n    login,\n    logout,\n    loading\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASM,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOL,UAAU,CAACG,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMc,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC;IACA;IACA,IAAID,KAAK,KAAK,kBAAkB,IAAIC,QAAQ,KAAK,UAAU,EAAE;MAC3D,MAAMC,QAAQ,GAAG;QACfC,EAAE,EAAE,GAAG;QACPH,KAAK,EAAEA,KAAK;QACZI,IAAI,EAAE,aAAa;QACnBC,MAAM,EAAE,CACN;UACEF,EAAE,EAAE,GAAG;UACPG,KAAK,EAAE,aAAa;UACpBC,IAAI,EAAE,YAAY;UAClBC,MAAM,EAAE,CACN;YAAEL,EAAE,EAAE,GAAG;YAAEM,GAAG,EAAE;UAA+D,CAAC,EAChF;YAAEN,EAAE,EAAE,GAAG;YAAEM,GAAG,EAAE;UAA+D,CAAC;QAEpF,CAAC;MAEL,CAAC;MACDb,cAAc,CAACM,QAAQ,CAAC;MACxB,OAAO,IAAI;IACb;IACA,MAAM,IAAIQ,KAAK,CAAC,qBAAqB,CAAC;EACxC,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBf,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMgB,KAAK,GAAG;IACZjB,WAAW;IACXI,KAAK;IACLY,MAAM;IACNd;EACF,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAnB,QAAA,EAChCA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAACvB,GAAA,CA9CeF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}